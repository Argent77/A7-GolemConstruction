// *** Installs creature-related resources ***

// Miniature Clay Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_mini~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Fix: IWD:EE contains corrupted Clay Golem BAMs in v1.4.0
ACTION_IF (GAME_IS_IWDEE) BEGIN
  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_clay~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// PST Flesh Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_FLESH_PST~ UNLESS ~A7!GOLEM_FLESH_PST~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_flesh_pst/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_flesh_pst~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// PST Miniature Flesh Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_FLESH_PST_MINI~ UNLESS ~A7!GOLEM_FLESH_PST_MINI~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_flesh_pst_mini/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_flesh_pst_mini~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// IWD Iron Golem animation
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  APPEND ~animate.ids~ ~0xE250 GOLEM_IRON_IWD~ UNLESS ~0xE250[ %TAB%]+GOLEM_IRON_IWD~
  CLEAR_IDS_MAP

  ACTION_IF (NOT FILE_EXISTS_IN_GAME ~e250.ini~) BEGIN
    COPY ~%MOD_FOLDER%/creatures/anim/golem_iron_iwd/e250.ini~ ~override~
  END

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_iron_iwd~ ~^.+\.bam$~ BEGIN
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
      COPY ~%BASH_FOR_FILESPEC%~ ~override~
    END
  END
END


// IWD Miniature Iron Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_IRON_IWD_MINI~ UNLESS ~A7!GOLEM_IRON_IWD_MINI~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_iron_iwd_mini/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_iron_iwd_mini~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Miniature Iron Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7300 slotMax = slotMin + 0xff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7f00 slotMax = slotMin + 0xff RET slot END
    ACTION_IF (slot <= 0) BEGIN
      FAIL @102 // No free creature animation slot found.
    END
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_IRON_MINI~ UNLESS ~A7!GOLEM_IRON_MINI~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_iron_mini/7xxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_iron_mini~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Brain Golem animation
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_BRAIN~ UNLESS ~A7!GOLEM_BRAIN~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_brain/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_brain~ ~^.+\.bam$~ BEGIN
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
      COPY ~%BASH_FOR_FILESPEC%~ ~override~
    END
  END
END


// Lightning Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7300 slotMax = slotMin + 0xff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7f00 slotMax = slotMin + 0xff RET slot END
    ACTION_IF (slot <= 0) BEGIN
      FAIL @102 // No free creature animation slot found.
    END
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_LIGHTNING~ UNLESS ~A7!GOLEM_LIGHTNING~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_lightning/7xxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_lightning~ ~^.+\.bmp$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Maggot Golem animation
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7300 slotMax = slotMin + 0xff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0x7f00 slotMax = slotMin + 0xff RET slot END
    ACTION_IF (slot <= 0) BEGIN
      FAIL @102 // No free creature animation slot found.
    END
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_MAGGOT~ UNLESS ~A7!GOLEM_MAGGOT~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_maggot/7xxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_maggot~ ~^.+\.bmp$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Ruby Golem animation
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_RUBY~ UNLESS ~A7!GOLEM_RUBY~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_ruby/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_ruby~ ~^.+\.bmp$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Doll Golem animation
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_DOLL~ UNLESS ~A7!GOLEM_DOLL~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_doll/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_doll~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Bone Doll animation
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  LAF FIND_FREE_ANIM_SLOT INT_VAR slotMin = 0xe000 slotMax = 0xefff RET slot END
  ACTION_IF (slot <= 0) BEGIN
    FAIL @102 // No free creature animation slot found.
  END

  LAF TO_HEX_NUMBER INT_VAR value = slot minDigits = 4 RET hexNumber END
  APPEND ~animate.ids~ ~0x%hexNumber% A7!GOLEM_BONE_DOLL~ UNLESS ~A7!GOLEM_BONE_DOLL~
  CLEAR_IDS_MAP

  COPY ~%MOD_FOLDER%/creatures/anim/golem_bone_doll/exxx.ini~ ~override/%hexNumber%.ini~

  ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/golem_bone_doll~ ~^.+\.bam$~ BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


// Installing creature sound files
ACTION_BASH_FOR ~%MOD_FOLDER%/creatures/anim/shared~ ~^.+\.wav$~ BEGIN
  ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
  END
END


OUTER_SET splstate_golem_lesser = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_LESSER~)
OUTER_SET splstate_golem_normal = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_NORMAL~)
OUTER_SET splstate_golem_greater = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_GREATER~)
OUTER_SET splstate_golem_perfect = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_PERFECT~)
OUTER_SET splstate_golem_flesh = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_FLESH~)
OUTER_SET splstate_golem_clay = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_CLAY~)
OUTER_SET splstate_golem_stone = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_STONE~)
OUTER_SET splstate_golem_iron = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_IRON~)
OUTER_SET splstate_golem_mithral = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_MITHRAL~)
OUTER_SET splstate_golem_adamantite = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_ADAMANTITE~)
OUTER_SET splstate_golem_maggot = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_MAGGOT~)
OUTER_SET splstate_golem_bone = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_BONE~)
OUTER_SET splstate_golem_brain = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_BRAIN~)
OUTER_SET splstate_golem_ice = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_ICE~)
OUTER_SET splstate_golem_magic = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_MAGIC~)
OUTER_SET splstate_golem_lightning = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_LIGHTNING~)
OUTER_SET splstate_golem_ruby = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_RUBY~)
ACTION_IF (GAME_IS_IWDEE) BEGIN
  OUTER_SET splstate_golem_fighter = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_FIGHTER~)
END
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  OUTER_SET splstate_golem_doll = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_DOLL~)
  OUTER_SET splstate_golem_bone_doll = IDS_OF_SYMBOL (~splstate~ ~A7!GOLEM_BONE_DOLL~)
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  OUTER_TEXT_SPRINT creFolder ~%MOD_FOLDER%/creatures/iwdee~
END ELSE BEGIN
  OUTER_TEXT_SPRINT creFolder ~%MOD_FOLDER%/creatures~
END

// Flesh Golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glfl1.cre~ ~override~
    SAY NAME1 @1001 // Lesser Flesh Golem
    SAY NAME2 @1001 // Lesser Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsfl1.cre~ ~override~
    SAY NAME1 @1001 // Lesser Flesh Golem
    SAY NAME2 @1001 // Lesser Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS

  COPY ~%creFolder%/a7!glfl2.cre~ ~override~
    SAY NAME1 @1002 // Flesh Golem
    SAY NAME2 @1002 // Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsfl2.cre~ ~override~
    SAY NAME1 @1002 // Flesh Golem
    SAY NAME2 @1002 // Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS

  COPY ~%creFolder%/a7!glfl3.cre~ ~override~
    SAY NAME1 @1003 // Greater Flesh Golem
    SAY NAME2 @1003 // Greater Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in02~ #0 ~innate~   // Stinking Cloud
    SET count = GAME_IS_IWDEE ? 2 : 3
    ADD_MEMORIZED_SPELL ~a7!in02~ #0 ~innate~ (3)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS

  COPY ~%creFolder%/a7!glfl4.cre~ ~override~
    SAY NAME1 @1004 // Perfect Flesh Golem
    SAY NAME2 @1004 // Perfect Flesh Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glfl4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_FLESH_PST~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in02~ #0 ~innate~   // Stinking Cloud
    SET count = GAME_IS_IWDEE ? 3 : 5
    ADD_MEMORIZED_SPELL ~a7!in02~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_flesh END
  IF_EXISTS
END


// Clay Golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glcl1.cre~ ~override~
    SAY NAME1 @2001 // Lesser Clay Golem
    SAY NAME2 @2001 // Lesser Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS
  COPY ~%creFolder%/a7!gscl1.cre~ ~override~
    SAY NAME1 @2001 // Lesser Clay Golem
    SAY NAME2 @2001 // Lesser Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS

  COPY ~%creFolder%/a7!glcl2.cre~ ~override~
    SAY NAME1 @2002 // Clay Golem
    SAY NAME2 @2002 // Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in03~ #0 ~innate~   // Golem Haste
    SET count = GAME_IS_IWDEE ? 1 : 2
    ADD_MEMORIZED_SPELL ~a7!in03~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS
  COPY ~%creFolder%/a7!gscl2.cre~ ~override~
    SAY NAME1 @2002 // Clay Golem
    SAY NAME2 @2002 // Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in03~ #0 ~innate~   // Golem Haste
    SET count = GAME_IS_IWDEE ? 1 : 2
    ADD_MEMORIZED_SPELL ~a7!in03~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS

  COPY ~%creFolder%/a7!glcl3.cre~ ~override~
    SAY NAME1 @2003 // Greater Clay Golem
    SAY NAME2 @2003 // Greater Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in03~ #0 ~innate~   // Golem Haste
    SET count = GAME_IS_IWDEE ? 3 : 5
    ADD_MEMORIZED_SPELL ~a7!in03~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS

  COPY ~%creFolder%/a7!glcl4.cre~ ~override~
    SAY NAME1 @2004 // Perfect Clay Golem
    SAY NAME2 @2004 // Perfect Clay Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glcl4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in03~ #0 ~innate~   // Golem Haste
    SET count = GAME_IS_IWDEE ? 4 : 8
    ADD_MEMORIZED_SPELL ~a7!in03~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_clay END
  IF_EXISTS
END


// Stone Golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glst1.cre~ ~override~
    SAY NAME1 @3001 // Lesser Stone Golem
    SAY NAME2 @3001 // Lesser Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsst1.cre~ ~override~
    SAY NAME1 @3001 // Lesser Stone Golem
    SAY NAME2 @3001 // Lesser Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS

  COPY ~%creFolder%/a7!glst2.cre~ ~override~
    SAY NAME1 @3002 // Stone Golem
    SAY NAME2 @3002 // Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in04~ #0 ~innate~   // Golem Slow
    SET count = GAME_IS_IWDEE ? 1 : 2
    ADD_MEMORIZED_SPELL ~a7!in04~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsst2.cre~ ~override~
    SAY NAME1 @3002 // Stone Golem
    SAY NAME2 @3002 // Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in04~ #0 ~innate~   // Golem Slow
    SET count = GAME_IS_IWDEE ? 1 : 2
    ADD_MEMORIZED_SPELL ~a7!in04~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS

  COPY ~%creFolder%/a7!glst3.cre~ ~override~
    SAY NAME1 @3003 // Greater Stone Golem
    SAY NAME2 @3003 // Greater Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in04~ #0 ~innate~   // Golem Slow
    SET count = GAME_IS_IWDEE ? 3 : 5
    ADD_MEMORIZED_SPELL ~a7!in04~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS

  COPY ~%creFolder%/a7!glst4.cre~ ~override~
    SAY NAME1 @3004 // Perfect Stone Golem
    SAY NAME2 @3004 // Perfect Stone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glst4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in04~ #0 ~innate~   // Golem Slow
    SET count = GAME_IS_IWDEE ? 4 : 8
    ADD_MEMORIZED_SPELL ~a7!in04~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_stone END
  IF_EXISTS
END


// Iron Golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glir1.cre~ ~override~
    SAY NAME1 @4001 // Lesser Iron Golem
    SAY NAME2 @4001 // Lesser Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_IWD_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsir1.cre~ ~override~
    SAY NAME1 @4001 // Lesser Iron Golem
    SAY NAME2 @4001 // Lesser Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_IWD_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS

  COPY ~%creFolder%/a7!glir2.cre~ ~override~
    SAY NAME1 @4002 // Iron Golem
    SAY NAME2 @4002 // Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in05~ #0 ~innate~   // Gas Cloud
    SET count = GAME_IS_IWDEE ? 2 : 3
    ADD_MEMORIZED_SPELL ~a7!in05~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsir2.cre~ ~override~
    SAY NAME1 @4002 // Iron Golem
    SAY NAME2 @4002 // Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in05~ #0 ~innate~   // Gas Cloud
    SET count = GAME_IS_IWDEE ? 2 : 3
    ADD_MEMORIZED_SPELL ~a7!in05~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS

  COPY ~%creFolder%/a7!glir3.cre~ ~override~
    SAY NAME1 @4003 // Greater Iron Golem
    SAY NAME2 @4003 // Greater Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in05~ #0 ~innate~   // Gas Cloud
    SET count = GAME_IS_IWDEE ? 3 : 6
    ADD_MEMORIZED_SPELL ~a7!in05~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS

  COPY ~%creFolder%/a7!glir4.cre~ ~override~
    SAY NAME1 @4004 // Perfect Iron Golem
    SAY NAME2 @4004 // Perfect Iron Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glir4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in05~ #0 ~innate~   // Gas Cloud
    SET count = GAME_IS_IWDEE ? 4 : 9
    ADD_MEMORIZED_SPELL ~a7!in05~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_iron END
  IF_EXISTS
END


// Mithral Golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glmi1.cre~ ~override~
    SAY NAME1 @5001 // Lesser Mithral Golem
    SAY NAME2 @5001 // Lesser Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsmi1.cre~ ~override~
    SAY NAME1 @5001 // Lesser Mithral Golem
    SAY NAME2 @5001 // Lesser Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS

  COPY ~%creFolder%/a7!glmi2.cre~ ~override~
    SAY NAME1 @5002 // Mithral Golem
    SAY NAME2 @5002 // Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    PATCH_IF (NOT GAME_IS_IWDEE) BEGIN
      ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
      ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~
    END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsmi2.cre~ ~override~
    SAY NAME1 @5002 // Mithral Golem
    SAY NAME2 @5002 // Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    PATCH_IF (NOT GAME_IS_IWDEE) BEGIN
      ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
      ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~
    END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS

  COPY ~%creFolder%/a7!glmi3.cre~ ~override~
    SAY NAME1 @5003 // Greater Mithral Golem
    SAY NAME2 @5003 // Greater Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    SET count = GAME_IS_IWDEE ? 1 : 2
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS

  COPY ~%creFolder%/a7!glmi4.cre~ ~override~
    SAY NAME1 @5004 // Perfect Mithral Golem
    SAY NAME2 @5004 // Perfect Mithral Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmi4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    SET count = GAME_IS_IWDEE ? 2 : 4
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_mithral END
  IF_EXISTS
END


// Adamantite Golems
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  COPY ~%creFolder%/a7!glad1.cre~ ~override~
    SAY NAME1 @6001 // Lesser Adamantite Golem
    SAY NAME2 @6001 // Lesser Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsad1.cre~ ~override~
    SAY NAME1 @6001 // Lesser Adamantite Golem
    SAY NAME2 @6001 // Lesser Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad1~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_IRON_MINI~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lesser END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS

  COPY ~%creFolder%/a7!glad2.cre~ ~override~
    SAY NAME1 @6002 // Adamantite Golem
    SAY NAME2 @6002 // Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (2)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS
  COPY ~%creFolder%/a7!gsad2.cre~ ~override~
    SAY NAME1 @6002 // Adamantite Golem
    SAY NAME2 @6002 // Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gsdef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad2~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (2)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_normal END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS

  COPY ~%creFolder%/a7!glad3.cre~ ~override~
    SAY NAME1 @6003 // Greater Adamantite Golem
    SAY NAME2 @6003 // Greater Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad3~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (5)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_greater END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS

  COPY ~%creFolder%/a7!glad4.cre~ ~override~
    SAY NAME1 @6004 // Perfect Adamantite Golem
    SAY NAME2 @6004 // Perfect Adamantite Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glad4~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in06~ #0 ~innate~   // Trample
    ADD_MEMORIZED_SPELL ~a7!in06~ #0 ~innate~ (8)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_perfect END
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_adamantite END
  IF_EXISTS
END


// Maggot Golem
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  COPY ~%creFolder%/a7!glmg.cre~ ~override~
    SAY NAME1 @7001 // Maggot Golem
    SAY NAME2 @7001 // Maggot Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glmg~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd2~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_MAGGOT~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_maggot END
  IF_EXISTS

  COPY ~%MOD_FOLDER%/graphics/a7!glmg1.bam~ ~override~
       ~%MOD_FOLDER%/graphics/a7!glmg1.vvc~ ~override~
END


// Bone Golem
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glbo.cre~ ~override~
    SAY NAME1 @8001 // Bone Golem
    SAY NAME2 @8001 // Bone Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glbo~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in13~ #0 ~innate~   // Hideous Laughter
    SET count = GAME_IS_IWDEE ? 2 : 4
    ADD_MEMORIZED_SPELL ~a7!in13~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_bone END
  IF_EXISTS
END


// Brain Golem
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  COPY ~%creFolder%/a7!glbr.cre~ ~override~
    SAY NAME1 @9001 // Brain Golem
    SAY NAME2 @9001 // Brain Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glbr~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_BRAIN~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in09~ #0 ~innate~   // Mind Blast
    ADD_MEMORIZED_SPELL ~a7!in09~ #0 ~innate~ (4)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_brain END
  IF_EXISTS
END


// Ice Golem
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glic.cre~ ~override~
    SAY NAME1 @10001 // Ice Golem
    SAY NAME2 @10001 // Ice Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glic~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in10~ #0 ~innate~   // Scolding Steam
    SET count = GAME_IS_IWDEE ? 2 : 4
    ADD_MEMORIZED_SPELL ~a7!in10~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_ice END
  IF_EXISTS

  // Slightly reduce Ice Golem selection circle size
  COPY_EXISTING ~e0f0.ini~ ~override~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~ellipse[ %TAB%]*=[ %TAB%]*[0-9]+~ ~ellipse=28~
  BUT_ONLY IF_EXISTS
END


// Magic Golem
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  COPY ~%creFolder%/a7!glma.cre~ ~override~
    SAY NAME1 @11001 // Magic Golem
    SAY NAME2 @11001 // Magic Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glma~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmdma~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in11~ #0 ~innate~   // Wild Magic Flare
    ADD_MEMORIZED_SPELL ~a7!in11~ #0 ~innate~ (3)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_magic END
  IF_EXISTS
END


// Lightning Golem
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!gllt.cre~ ~override~
    SAY NAME1 @12001 // Lightning Golem
    SAY NAME2 @12001 // Lightning Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!gllt~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_LIGHTNING~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in15~ #0 ~innate~   // Lightning Travel
    ADD_MEMORIZED_SPELL ~a7!in15~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in07~ #0 ~innate~   // Chain Lightning
    SET count = GAME_IS_IWDEE ? 3 : 5
    ADD_MEMORIZED_SPELL ~a7!in07~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_lightning END
  IF_EXISTS
END


// Ruby Golem
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%creFolder%/a7!glru.cre~ ~override~
    SAY NAME1 @13001 // Ruby Golem
    SAY NAME2 @13001 // Ruby Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldef~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glru~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_RUBY~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    ADD_KNOWN_SPELL ~a7!in14~ #0 ~innate~   // Ruby Ray of Reversal
    SET count = GAME_IS_IWDEE ? 2 : 3
    ADD_MEMORIZED_SPELL ~a7!in14~ #0 ~innate~ (count)
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_ruby END
  IF_EXISTS
END


// Doll Golem
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COPY ~%creFolder%/a7!gldo.cre~ ~override~
    SAY NAME1 @14001  // Doll Golem
    SAY NAME2 @14001  // Doll Golem
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldl~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!gldo~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd3~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_DOLL~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_doll END
  IF_EXISTS

  COPY ~%creFolder%/a7!gxdo.cre~ ~override~
    SAY NAME1 @100029  // Golem Servant
    SAY NAME2 @100029  // Golem Servant
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gxdl~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!gxdo~ #8
    WRITE_ASCII DIALOG ~a7!cmdx~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_DOLL~))
    WRITE_BYTE 0x274 specific_golem
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_doll END
  IF_EXISTS
END


// Bone Doll
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COPY ~%creFolder%/a7!glbd.cre~ ~override~
    SAY NAME1 @15001  // Bone Doll
    SAY NAME2 @15001  // Bone Doll
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gldl~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!glbd~ #8
    WRITE_ASCII SCRIPT_DEFAULT ~a7!cmd~ #8
    WRITE_ASCII DIALOG ~a7!cmd3~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_BONE_DOLL~))
    WRITE_BYTE 0x274 specific_golem
    ADD_KNOWN_SPELL ~a7!in01~ #0 ~innate~   // Dismiss Golem
    ADD_MEMORIZED_SPELL ~a7!in01~ #0 ~innate~
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_bone_doll END
  IF_EXISTS

  COPY ~%creFolder%/a7!gxbd.cre~ ~override~
    SAY NAME1 @100029  // Golem Servant
    SAY NAME2 @100029  // Golem Servant
    WRITE_ASCII SCRIPT_OVERRIDE ~a7!gxdl~ #8
    WRITE_ASCII SCRIPT_CLASS ~a7!gxbd~ #8
    WRITE_ASCII DIALOG ~a7!cmdx~ #8
    WRITE_LONG 0x28 (IDS_OF_SYMBOL (~animate~ ~A7!GOLEM_BONE_DOLL~))
    WRITE_BYTE 0x274 specific_golem
    LPF APPLY_SPELL_STATE INT_VAR splstate = splstate_golem_bone_doll END
  IF_EXISTS
END


// Golem upgrade feature
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COPY ~%MOD_FOLDER%/spells/a7!pr.spl~ ~override~
    SAY NAME1 @21028  // Upgrade
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 177  // Use EFF
        parameter1 = specific_golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!dex.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 177  // Use EFF
        parameter1 = specific_golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prcas.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prcas.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!upgr.eff~ ~override~

  COPY ~%MOD_FOLDER%/spells/a7!prfl.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!prflx.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!deflx.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_flesh
  COPY ~%MOD_FOLDER%/spells/a7!prcl.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!prclx.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!declx.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_clay
  COPY ~%MOD_FOLDER%/spells/a7!prst.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!prstx.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!destx.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_stone
  COPY ~%MOD_FOLDER%/spells/a7!prir.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!prirx.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!deirx.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_iron
  COPY ~%MOD_FOLDER%/spells/a7!prmi.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!prmix.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!demix.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_mithral
  COPY ~%MOD_FOLDER%/spells/a7!prad.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!pradx.eff~ ~override~
       ~%MOD_FOLDER%/spells/a7!deadx.eff~ ~override~
    WRITE_LONG 0x1c splstate_golem_adamantite

  COPY ~%MOD_FOLDER%/spells/a7!prfl.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prcl.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prst.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prir.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prmi.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prad.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prflx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prclx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prstx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prirx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!prmix.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!pradx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!deflx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!declx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!destx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!deirx.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!demix.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!deadx.spl~ ~override~
    LPF ALTER_SPELL_EFFECT_EX
      INT_VAR
        enable_match_parameter1 = 1
        enable_update_parameter1 = 1
        match_opcode = 326  // Apply effects list
        match_parameter1 = 1
        parameter1 = splstate_golem_lesser
    END
    LPF ALTER_SPELL_EFFECT_EX
      INT_VAR
        enable_match_parameter1 = 1
        enable_update_parameter1 = 1
        match_opcode = 326  // Apply effects list
        match_parameter1 = 2
        parameter1 = splstate_golem_normal
    END
    LPF ALTER_SPELL_EFFECT_EX
      INT_VAR
        enable_match_parameter1 = 1
        enable_update_parameter1 = 1
        match_opcode = 326  // Apply effects list
        match_parameter1 = 3
        parameter1 = splstate_golem_greater
    END
    LPF ALTER_SPELL_EFFECT_EX
      INT_VAR
        enable_match_parameter1 = 1
        enable_update_parameter1 = 1
        match_opcode = 326  // Apply effects list
        match_parameter1 = 4
        parameter1 = splstate_golem_perfect
    END

  COPY ~%MOD_FOLDER%/spells/a7!prfl1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21029)  // Upgraded to Flesh Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prfl2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21030)  // Upgraded to Greater Flesh Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prfl3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21031)  // Upgraded to Perfect Flesh Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!prcl1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21032)  // Upgraded to Clay Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prcl2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21033)  // Upgraded to Greater Clay Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prcl3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21034)  // Upgraded to Perfect Clay Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!prst1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21035)  // Upgraded to Stone Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prst2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21036)  // Upgraded to Greater Stone Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prst3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21037)  // Upgraded to Perfect Stone Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!prir1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21038)  // Upgraded to Iron Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prir2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21039)  // Upgraded to Greater Iron Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prir3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21040)  // Upgraded to Perfect Iron Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!prmi1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21041)  // Upgraded to Mithral Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prmi2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21042)  // Upgraded to Greater Mithral Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prmi3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21043)  // Upgraded to Perfect Mithral Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!prad1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21044)  // Upgraded to Adamantite Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prad2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21045)  // Upgraded to Greater Adamantite Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!prad3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21046)  // Upgraded to Perfect Adamantite Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!defl1.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!decl1.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!dest1.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!deir1.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!demi1.spl~ ~override~
       ~%MOD_FOLDER%/spells/a7!dead1.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21047)  // Reset experience
    END
  COPY ~%MOD_FOLDER%/spells/a7!defl2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21048)  // Downgraded to Lesser Flesh Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!defl3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21049)  // Downgraded to Flesh Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!defl4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21050)  // Downgraded to Greater Flesh Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!decl2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21051)  // Downgraded to Lesser Clay Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!decl3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21052)  // Downgraded to Clay Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!decl4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21053)  // Downgraded to Greater Clay Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!dest2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21054)  // Downgraded to Lesser Stone Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!dest3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21055)  // Downgraded to Stone Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!dest4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21056)  // Downgraded to Greater Stone Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!deir2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21057)  // Downgraded to Lesser Iron Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!deir3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21058)  // Downgraded to Iron Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!deir4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21059)  // Downgraded to Greater Iron Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!demi2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21060)  // Downgraded to Lesser Mithral Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!demi3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21061)  // Downgraded to Mithral Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!demi4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21062)  // Downgraded to Greater Mithral Golem
    END

  COPY ~%MOD_FOLDER%/spells/a7!dead2.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21063)  // Downgraded to Lesser Adamantite Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!dead3.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21064)  // Downgraded to Adamantite Golem
    END
  COPY ~%MOD_FOLDER%/spells/a7!dead4.spl~ ~override~
    LPF ALTER_SPELL_EFFECT
      INT_VAR
        match_opcode = 139  // Display string
        parameter1 = RESOLVE_STR_REF(@21065)  // Downgraded to Greater Adamantite Golem
    END

  COMPILE ~%MOD_FOLDER%/scripts/a7!ct90.baf~
  ACTION_IF (FILE_EXISTS_IN_GAME ~wish.dlg~) BEGIN
    COMPILE ~%MOD_FOLDER%/dialogs/limited_wish_upgrade.d~
  END
  ACTION_IF (FILE_EXISTS_IN_GAME ~wish25.dlg~) BEGIN
    COMPILE ~%MOD_FOLDER%/dialogs/wish_upgrade.d~
  END

  // Helper creature needed to remove materials for upgrade process from party
  COPY ~%MOD_FOLDER%/creatures/a7!mark.cre~ ~override/a7!upgr.cre~
    WRITE_ASCII DEATHVAR ~a7!upgr~

  // Wish djinni should detect invisible golems
  COPY_EXISTING ~wish01.cre~ ~override~
                ~wish02.cre~ ~override~
    LPF CRE_EFFECT_EXISTS INT_VAR opcode = 193 RET result END
    PATCH_IF (NOT result) BEGIN
      LPF ADD_CRE_EFFECT
      INT_VAR
        opcode = 193    // Invisibility detection
        target = 1      // Self
        parameter2 = 1  // stat value
        timing = 1      // permanent until death
      END
    END
  IF_EXISTS
END


// Misc. stuff
ACTION_IF (GAME_IS_IWDEE) BEGIN
  COPY ~%MOD_FOLDER%/items/iwdee/a7!fam.itm~ ~override~
END ELSE ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD) BEGIN
  COPY ~%MOD_FOLDER%/items/bgee/a7!fam.itm~ ~override~
END ELSE BEGIN
  COPY ~%MOD_FOLDER%/items/bg2ee/a7!fam.itm~ ~override~
END

ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  COMPILE ~%MOD_FOLDER%/dialogs/a7!cmd.d~
          ~%MOD_FOLDER%/dialogs/a7!cmd2.d~
          EVAL
END
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/dialogs/a7!cmd3.d~
          ~%MOD_FOLDER%/dialogs/a7!cmdx.d~
          EVAL
END

ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/dialogs/a7!cmd_soa.d~
          ~%MOD_FOLDER%/dialogs/a7!cmd2_soa.d~
          ~%MOD_FOLDER%/dialogs/a7!cmd3_soa.d~
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  OUTER_SET chance = 4    // RandomNum(chance, 1)
  OUTER_TEXT_SPRINT random ~RandomNum(2, 1)~
END ELSE BEGIN
  OUTER_SET chance = 2    // RandomNum(chance, 1)
  OUTER_TEXT_SPRINT random ~~
END

ACTION_IF (NOT GAME_IS_BGEE) BEGIN
COMPILE ~%MOD_FOLDER%/scripts/a7!gldef.baf~
        ~%MOD_FOLDER%/scripts/a7!gsdef.baf~
        ~%MOD_FOLDER%/scripts/a7!glfl1.baf~
        ~%MOD_FOLDER%/scripts/a7!glfl2.baf~
        ~%MOD_FOLDER%/scripts/a7!glfl3.baf~
        ~%MOD_FOLDER%/scripts/a7!glfl4.baf~
        ~%MOD_FOLDER%/scripts/a7!glcl1.baf~
        ~%MOD_FOLDER%/scripts/a7!glcl2.baf~
        ~%MOD_FOLDER%/scripts/a7!glcl3.baf~
        ~%MOD_FOLDER%/scripts/a7!glcl4.baf~
        ~%MOD_FOLDER%/scripts/a7!glst1.baf~
        ~%MOD_FOLDER%/scripts/a7!glst2.baf~
        ~%MOD_FOLDER%/scripts/a7!glst3.baf~
        ~%MOD_FOLDER%/scripts/a7!glst4.baf~
        ~%MOD_FOLDER%/scripts/a7!glir1.baf~
        ~%MOD_FOLDER%/scripts/a7!glir4.baf~
        ~%MOD_FOLDER%/scripts/a7!glir2.baf~
        ~%MOD_FOLDER%/scripts/a7!glir3.baf~
        ~%MOD_FOLDER%/scripts/a7!glmi1.baf~
        ~%MOD_FOLDER%/scripts/a7!glmi2.baf~
        ~%MOD_FOLDER%/scripts/a7!glmi3.baf~
        ~%MOD_FOLDER%/scripts/a7!glmi4.baf~
        ~%MOD_FOLDER%/scripts/a7!glbo.baf~
        ~%MOD_FOLDER%/scripts/a7!glic.baf~
        ~%MOD_FOLDER%/scripts/a7!gllt.baf~
        ~%MOD_FOLDER%/scripts/a7!glru.baf~
        ~%MOD_FOLDER%/scripts/a7!ct00.baf~
        ~%MOD_FOLDER%/scripts/a7!ct01.baf~
        ~%MOD_FOLDER%/scripts/a7!ct02.baf~
        ~%MOD_FOLDER%/scripts/a7!ct03.baf~
        ~%MOD_FOLDER%/scripts/a7!ct04.baf~
        EVAL
END

ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/scripts/a7!gldl.baf~
          ~%MOD_FOLDER%/scripts/a7!gxdl.baf~
          ~%MOD_FOLDER%/scripts/a7!gldo.baf~
          ~%MOD_FOLDER%/scripts/a7!gxdo.baf~
          ~%MOD_FOLDER%/scripts/a7!glbd.baf~
          ~%MOD_FOLDER%/scripts/a7!gxbd.baf~
          EVAL
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  COMPILE ~%MOD_FOLDER%/scripts/iwdee/a7!cmd.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct30.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct31.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct32.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct33.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct34.baf~
          ~%MOD_FOLDER%/scripts/iwdee/a7!ct35.baf~
END

ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  COMPILE ~%MOD_FOLDER%/scripts/a7!cmd.baf~
          ~%MOD_FOLDER%/scripts/a7!cmdma.baf~
          ~%MOD_FOLDER%/scripts/a7!ct10.baf~
          ~%MOD_FOLDER%/scripts/a7!ct11.baf~
          ~%MOD_FOLDER%/scripts/a7!ct12.baf~
          ~%MOD_FOLDER%/scripts/a7!ct13.baf~
          ~%MOD_FOLDER%/scripts/a7!ct14.baf~
          ~%MOD_FOLDER%/scripts/a7!ct15.baf~
          ~%MOD_FOLDER%/scripts/a7!ct16.baf~
          ~%MOD_FOLDER%/scripts/a7!ct17.baf~
          ~%MOD_FOLDER%/scripts/a7!ct18.baf~
          ~%MOD_FOLDER%/scripts/a7!ct19.baf~
          ~%MOD_FOLDER%/scripts/a7!glad1.baf~
          ~%MOD_FOLDER%/scripts/a7!glad2.baf~
          ~%MOD_FOLDER%/scripts/a7!glad3.baf~
          ~%MOD_FOLDER%/scripts/a7!glad4.baf~
          ~%MOD_FOLDER%/scripts/a7!glmg.baf~
          ~%MOD_FOLDER%/scripts/a7!glbr.baf~
          ~%MOD_FOLDER%/scripts/a7!glma.baf~
          EVAL
END

ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/scripts/a7!ctbd1.baf~
          ~%MOD_FOLDER%/scripts/a7!ctbd2.baf~
END


// handling game-specific events
ACTION_IF (GAME_IS_SOD OR GAME_IS_EET) BEGIN
  EXTEND_TOP ~a7!cmd.bcs~ ~%MOD_FOLDER%/scripts/a7!cmd_sod.baf~
  EXTEND_TOP ~a7!cmdma.bcs~ ~%MOD_FOLDER%/scripts/a7!cmd_sod.baf~
END
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  EXTEND_TOP ~a7!cmd.bcs~ ~%MOD_FOLDER%/scripts/a7!cmd_soa.baf~
  EXTEND_TOP ~a7!cmdma.bcs~ ~%MOD_FOLDER%/scripts/a7!cmd_soa.baf~
END


// Installing enemy golems
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_IWDEE) BEGIN
  INCLUDE ~%MOD_FOLDER%/lib/creatures_enemy.tph~
END


// Applying creature animation changes to original golems of the game
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  INCLUDE ~%MOD_FOLDER%/lib/creatures_vanilla.tph~
END


// Adding random treasure tables for clay golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 15 STR_VAR treasure = "A7!RDCL1" item = "A7!CLAY" END
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 30 STR_VAR treasure = "A7!RDCL2" item = "A7!CLAY" END

  ACTION_IF (GAME_IS_SOD) BEGIN
    COPY_EXISTING ~a7!glcl1.cre~ ~override~
                  ~a7!gxcl1.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    COPY_EXISTING ~a7!glcl2.cre~ ~override~
                  ~a7!gscl2.cre~ ~override~
                  ~a7!gxcl2.cre~ ~override~
                  ~a7!gycl2.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END

  ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
    COPY_EXISTING ~igolfle1.cre~ ~override~
                  ~igolfle2.cre~ ~override~
                  ~igolfle3.cre~ ~override~
                  ~igolfle4.cre~ ~override~
                  ~a7!glcl1.cre~ ~override~
                  ~a7!gscl1.cre~ ~override~
                  ~a7!gxcl1.cre~ ~override~
                  ~a7!gycl1.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    COPY_EXISTING ~clgol01.cre~ ~override~
                  ~golcla01.cre~ ~override~
                  ~kpgol02.cre~ ~override~
                  ~ppiron.cre~ ~override~
                  ~a7!glcl2.cre~ ~override~
                  ~a7!gscl2.cre~ ~override~
                  ~a7!gxcl2.cre~ ~override~
                  ~a7!gycl2.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END

  ACTION_IF (GAME_IS_IWDEE) BEGIN
    COPY_EXISTING ~a7!glcl1.cre~ ~override~
                  ~a7!gxcl1.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    COPY_EXISTING ~a7!glcl2.cre~ ~override~
                  ~a7!gscl2.cre~ ~override~
                  ~a7!gxcl2.cre~ ~override~
                  ~a7!gycl2.cre~ ~override~
                  ~golsan01.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdcl2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END
END


// Adding random treasure tables for stone golems
ACTION_IF (NOT GAME_IS_BGEE) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 25 STR_VAR treasure = "A7!RDST1" item = "A7!STON" END

  ACTION_IF (GAME_IS_SOD OR GAME_IS_EET) BEGIN
    LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 10 STR_VAR treasure = "A7!RDST2" item = "A7!STON" END
    COPY_EXISTING ~bdgolsto.cre~ ~override~
                  ~bdmengo.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdst1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    COPY_EXISTING ~bdpetsg.cre~ ~override~
                  ~bdpetsg2.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdst2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    ACTION_IF (GAME_IS_SOD) BEGIN
      COPY_EXISTING ~a7!glst2.cre~ ~override~
                    ~a7!gsst2.cre~ ~override~
                    ~a7!gxst2.cre~ ~override~
                    ~a7!gyst2.cre~ ~override~
        ADD_CRE_ITEM ~a7!rdst1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
      BUT_ONLY IF_EXISTS
    END
  END

  ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
    COPY_EXISTING ~dstone1.cre~ ~override~
                  ~golsto01.cre~ ~override~
                  ~jugjug01.cre~ ~override~
                  ~kpgol03.cre~ ~override~
                  ~kpgol05.cre~ ~override~
                  ~stgol01.cre~ ~override~
                  ~a7!glst2.cre~ ~override~
                  ~a7!gsst2.cre~ ~override~
                  ~a7!gxst2.cre~ ~override~
                  ~a7!gyst2.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdst1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END

  ACTION_IF (GAME_IS_IWDEE) BEGIN
    COPY_EXISTING ~a7!glst2.cre~ ~override~
                  ~a7!gsst2.cre~ ~override~
                  ~a7!gxst2.cre~ ~override~
                  ~a7!gyst2.cre~ ~override~
                  ~goljug01.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdst1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END
END


// Adding random treasure tables for iron golems
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 20 STR_VAR treasure = "A7!RDIR1" item = "A7!IRON" END
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 40 STR_VAR treasure = "A7!RDIR2" item = "A7!IRON" END

  COPY_EXISTING ~a7!glir1.cre~ ~override~
                ~a7!gxir1.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~goliro01.cre~ ~override~
                ~kpgol04.cre~ ~override~
                ~a7!glir2.cre~ ~override~
                ~a7!gsir2.cre~ ~override~
                ~a7!gxir2.cre~ ~override~
                ~a7!gyir2.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdir2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  COPY_EXISTING ~a7!glir1.cre~ ~override~
                ~a7!gxir1.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~cyirong.cre~ ~override~
                ~fingol01.cre~ ~override~
                ~fingol02.cre~ ~override~
                ~golemiro.cre~ ~override~
                ~shiron.cre~ ~override~
                ~a7!glir2.cre~ ~override~
                ~a7!gsir2.cre~ ~override~
                ~a7!gxir2.cre~ ~override~
                ~a7!gyir2.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdir2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for mithral golems
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET OR GAME_IS_IWDEE) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 10 STR_VAR treasure = "A7!RDMI1" item = "A7!MITH" END

  COPY_EXISTING ~a7!glmi1.cre~ ~override~
                ~a7!gsmi1.cre~ ~override~
                ~a7!gxmi1.cre~ ~override~
                ~a7!gymi1.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~a7!glmi2.cre~ ~override~
                ~a7!gsmi2.cre~ ~override~
                ~a7!gxmi2.cre~ ~override~
                ~a7!gymi2.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdmi1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for adamantite golems
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 10 STR_VAR treasure = "A7!RDAD1" item = "A7!ADAM" END

  COPY_EXISTING ~a7!glad1.cre~ ~override~
                ~a7!gsad1.cre~ ~override~
                ~a7!gxad1.cre~ ~override~
                ~a7!gyad1.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~golada01.cre~ ~override~
                ~a7!glad2.cre~ ~override~
                ~a7!gsad2.cre~ ~override~
                ~a7!gxad2.cre~ ~override~
                ~a7!gyad2.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdir2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdad1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for bone golems and skeleton warriors
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 25 STR_VAR treasure = "A7!RDBO1" item = "A7!BONE" END
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 5 STR_VAR treasure = "A7!RDBO2" item = "A7!BONE" END
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 25 STR_VAR treasure = "A7!RDBO3" item = "A7!BONE" defItem = "0" END   // for containers
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COPY_EXISTING ~skelwa.cre~ ~override~
                ~skelwa02.cre~ ~override~
                ~skelwa03.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbo1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~skelaci.cre~ ~override~
                ~skeldis.cre~ ~override~
                ~skelet.cre~ ~override~
                ~skelet02.cre~ ~override~
                ~skelet03.cre~ ~override~
                ~skeletb.cre~ ~override~
                ~skelets.cre~ ~override~
                ~skelet_a.cre~ ~override~
                ~skelet_b.cre~ ~override~
                ~skelet_c.cre~ ~override~
                ~skelfire.cre~ ~override~
                ~skelice.cre~ ~override~
                ~skelmel.cre~ ~override~
                ~cdmhskel.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  COPY_EXISTING ~icbone01.cre~ ~override~
                ~ar18skel.cre~ ~override~
                ~ceskel01.cre~ ~override~
                ~firmon02.cre~ ~override~
                ~golbon01.cre~ ~override~
                ~grskel1.cre~ ~override~
                ~grskel2.cre~ ~override~
                ~grtomb01.cre~ ~override~
                ~hgskl04.cre~ ~override~
                ~nevm2.cre~ ~override~
                ~riftcr02.cre~ ~override~
                ~rskel02.cre~ ~override~
                ~sahskel.cre~ ~override~
                ~skelwa.cre~ ~override~
                ~skelwa01.cre~ ~override~
                ~skelwa02.cre~ ~override~
                ~skelwa03.cre~ ~override~
                ~suundead.cre~ ~override~
                ~tanskw1.cre~ ~override~
                ~a7!glbo.cre~ ~override~
                ~a7!gxbo.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbo1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  COPY_EXISTING ~dliceaxe.cre~ ~override~
                ~dlicehnd.cre~ ~override~
                ~dliceswd.cre~ ~override~
                ~therik.cre~ ~override~
                ~undeadlt.cre~ ~override~
                ~bon8005.cre~ ~override~
                ~bon8013.cre~ ~override~
                ~bonegard.cre~ ~override~
                ~dlbnegrd.cre~ ~override~
                ~dlfznbne.cre~ ~override~
                ~ms7bgrd.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbo1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~ktskh2.cre~ ~override~
                ~ktskh3.cre~ ~override~
                ~kttga1.cre~ ~override~
                ~kttga2.cre~ ~override~
                ~kttga3.cre~ ~override~
                ~kttgm1.cre~ ~override~
                ~kttgm3.cre~ ~override~
                ~rkttguam.cre~ ~override~
                ~dlcldaxe.cre~ ~override~
                ~dlcldhnd.cre~ ~override~
                ~dlcldmce.cre~ ~override~
                ~dlcldswd.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for brain golems
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 10 STR_VAR treasure = "A7!RDBR1" item = "A7!BRIN" END
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 25 STR_VAR treasure = "A7!RDBR2" item = "A7!BRIN" END

  COPY_EXISTING ~udgolem.cre~ ~override~
                ~golbra01.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbr2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~a7!glbr.cre~ ~override~
                ~a7!gxbr.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbr1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for ice golems
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_SOD) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 20 STR_VAR treasure = "A7!RDIC1" item = "A7!ICE" END
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 5 STR_VAR treasure = "A7!RDIC2" item = "A7!ICE" END

  ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
    COPY_EXISTING ~golice01.cre~ ~override~
                  ~gorgoli.cre~ ~override~
                  ~a7!glic.cre~ ~override~
                  ~a7!gxic.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdic1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END

  ACTION_IF (GAME_IS_IWDEE) BEGIN
    COPY_EXISTING ~cyiceg.cre~ ~override~
                  ~dlgolem.cre~ ~override~
                  ~golemic.cre~ ~override~
                  ~rndigolm.cre~ ~override~
                  ~sagolem.cre~ ~override~
                  ~a7!glic.cre~ ~override~
                  ~a7!gxic.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdic1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS

    COPY_EXISTING ~dliceaxe.cre~ ~override~
                  ~dlicehnd.cre~ ~override~
                  ~dliceswd.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdic2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END
END


// Adding random treasure tables for flesh and maggot golems
ACTION_IF (GAME_IS_BGEE) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 20 STR_VAR treasure = "A7!RDBD1" item = "A7!BODY" END
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 30 STR_VAR treasure = "A7!RDBD2" item = "A7!BODY" END
END ELSE BEGIN
  LAF DEFINE_RANDOM_TREASURE_EX INT_VAR chance_0 = 20 chance_1 = 10 STR_VAR treasure = "A7!RDBD1" item_0 = "A7!BODY" item_1 = "A7!MBDY" END
  LAF DEFINE_RANDOM_TREASURE_EX INT_VAR chance_0 = 30 chance_1 = 5 STR_VAR treasure = "A7!RDBD2" item_0 = "A7!BODY" item_1 = "A7!MBDY" END
END
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 20 STR_VAR treasure = "A7!RDBD3" item = "A7!BODY" END
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 35 STR_VAR treasure = "A7!RDBD4" item = "A7!BODY" END
LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 10 STR_VAR treasure = "A7!RDBD5" item = "A7!BODY" END
ACTION_IF (GAME_IS_BGEE OR GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COPY_EXISTING ~bddead01.cre~ ~override~
                ~bdghast.cre~ ~override~
                ~bdjunia2.cre~ ~override~
                ~ghast.cre~ ~override~
                ~ghastd.cre~ ~override~
                ~ghoul.cre~ ~override~
                ~zombie.cre~ ~override~
                ~zombie_a.cre~ ~override~
                ~zombie_b.cre~ ~override~
                ~zombie_c.cre~ ~override~
                ~zombie_d.cre~ ~override~
                ~zombie_e.cre~ ~override~
                ~zombiew.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~bdghastg.cre~ ~override~
                ~ghoullor.cre~ ~override~
                ~grael.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~bdmumm01.CRE~ ~override~
    ADD_CRE_ITEM ~a7!rdbd4~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  ACTION_IF (GAME_IS_SOD) BEGIN
    COPY_EXISTING ~a7!glfl2.cre~ ~override~
                  ~a7!glfl3.cre~ ~override~
                  ~a7!glfl4.cre~ ~override~
                  ~a7!gxfl2.cre~ ~override~
                  ~a7!gxfl3.cre~ ~override~
                  ~a7!gxfl4.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdbd3~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END
END

ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  COPY_EXISTING ~bhghoul1.cre~ ~override~
                ~bhghoul2.cre~ ~override~
                ~bhghoul3.cre~ ~override~
                ~bhghoul4.cre~ ~override~
                ~bhghoul5.cre~ ~override~
                ~ghast01.cre~ ~override~
                ~ghastf01.cre~ ~override~
                ~ghoul01.cre~ ~override~
                ~grreven.cre~ ~override~
                ~gtcit1.cre~ ~override~
                ~gtcit2.cre~ ~override~
                ~gtcit3.cre~ ~override~
                ~gtcit4.cre~ ~override~
                ~gtcit5.cre~ ~override~
                ~lacedo01.cre~ ~override~
                ~rzomb01.cre~ ~override~
                ~sahlace.cre~ ~override~
                ~sahzomb.cre~ ~override~
                ~xghast1.cre~ ~override~
                ~xghast2.cre~ ~override~
                ~zombie01.cre~ ~override~
                ~zombju01.cre~ ~override~
                ~zombse01.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~ghogr01.cre~ ~override~
                ~gholor01.cre~ ~override~
                ~lacedo02.cre~ ~override~
                ~nevm3.cre~ ~override~
                ~nevm5.cre~ ~override~
                ~riftcr01.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

    COPY_EXISTING ~a7!glfl2.cre~ ~override~
                  ~a7!glfl3.cre~ ~override~
                  ~a7!glfl4.cre~ ~override~
                  ~a7!gxfl2.cre~ ~override~
                  ~a7!gxfl3.cre~ ~override~
                  ~a7!gxfl4.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd3~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~gorlic01.cre~ ~override~
                ~hlshang.cre~ ~override~
                ~lich01.cre~ ~override~
                ~lichel01.cre~ ~override~
                ~mumgre01.cre~ ~override~
                ~mummy.cre~ ~override~
                ~mummy01.cre~ ~override~
                ~ohhgmum.cre~ ~override~
                ~ohhmummy.cre~ ~override~
                ~riftcr03.cre~ ~override~
                ~sendark.cre~ ~override~
                ~senlich.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd4~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    ADD_CRE_ITEM ~a7!rdbo2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END

ACTION_IF (GAME_IS_IWDEE) BEGIN
  COPY_EXISTING ~drowned.cre~ ~override~
                ~ktmum1.cre~ ~override~
                ~lzombiej.cre~ ~override~
                ~mummy.cre~ ~override~
                ~rbibarr.cre~ ~override~
                ~rbidrow.cre~ ~override~
                ~revnant.cre~ ~override~
                ~rndrevn.cre~ ~override~
                ~wightba.cre~ ~override~
                ~zombiel.cre~ ~override~
                ~a7!glfl2.cre~ ~override~
                ~a7!glfl3.cre~ ~override~
                ~a7!glfl4.cre~ ~override~
                ~a7!gxfl2.cre~ ~override~
                ~a7!gxfl3.cre~ ~override~
                ~a7!gxfl4.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd3~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~cpmumg.cre~ ~override~
                ~mummyg.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd4~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS

  COPY_EXISTING ~ghast.cre~ ~override~
                ~ktghl1.cre~ ~override~
                ~ktgst1.cre~ ~override~
                ~ktwgt1.cre~ ~override~
                ~ktwgti1.cre~ ~override~
                ~ktzom1.cre~ ~override~
                ~ktzomj.cre~ ~override~
                ~lghast.cre~ ~override~
                ~lghoul.cre~ ~override~
                ~lwight.cre~ ~override~
                ~lzombie.cre~ ~override~
                ~rdecwig.cre~ ~override~
                ~udghast.cre~ ~override~
                ~udghoul.cre~ ~override~
                ~udwight.cre~ ~override~
                ~wight.cre~ ~override~
                ~wight2.cre~ ~override~
                ~wight3.cre~ ~override~
                ~wightcld.cre~ ~override~
                ~zombie.cre~ ~override~
    ADD_CRE_ITEM ~a7!rdbd5~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
  BUT_ONLY IF_EXISTS
END


// Adding random treasure tables for ruby golems
ACTION_IF (NOT GAME_IS_BGEE AND NOT GAME_IS_SOD) BEGIN
  LAF DEFINE_RANDOM_TREASURE INT_VAR chance = 20 STR_VAR treasure = "A7!RDRU1" item = "A7!RUBY" END
  LAF DEFINE_RANDOM_TREASURE_EX INT_VAR chance_0 = 10 chance_1 = 10 STR_VAR treasure = "A7!RDRU2" item_0 = "A7!RUBY" item_1 = "MISC16" END

  ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
    COPY_EXISTING ~a7!glru.cre~ ~override~
                  ~a7!gxru.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdru1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
      ADD_CRE_ITEM ~a7!rdru1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
      ADD_CRE_ITEM ~a7!rdru2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
      ADD_CRE_ITEM ~a7!rdru2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END

  ACTION_IF (GAME_IS_IWDEE) BEGIN
    COPY_EXISTING ~sal8001.cre~ ~override~
                  ~sal8005.cre~ ~override~
                  ~sal8008.cre~ ~override~
                  ~salamand.cre~ ~override~
                  ~salamanr.cre~ ~override~
                  ~rldsalfi.cre~ ~override~
      ADD_CRE_ITEM ~a7!rdru1~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
      ADD_CRE_ITEM ~a7!rdru2~ #1 #0 #0 ~UNSTEALABLE~ ~INV1 INV2 INV3 INV4 INV5 INV6 INV7 INV8 INV9 INV10 INV11 INV12 INV13 INV14 INV15 INV16~
    BUT_ONLY IF_EXISTS
  END
END


// Belegarm
ACTION_IF (GAME_IS_SOD OR GAME_IS_EET) BEGIN
  EXTEND_BOTTOM ~bdbelega.bcs~ ~%MOD_FOLDER%/scripts/a7!bdbeleg_bottom.baf~
END


// Brother Deepvein
ACTION_IF (GAME_IS_SOD OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/dialogs/bddeep.d~
END


// Ore Merchant Jerlia
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  COMPILE ~%MOD_FOLDER%/dialogs/scjerlia.d~
  COMPILE ~%MOD_FOLDER%/scripts/a7!jerl.baf~ EVAL

  COPY_EXISTING ~scjerlia.cre~ ~override~
    READ_LONG NAME1 name_strref
    SET found = 0
    FOR (ofs = 0x268; ofs >= 0x248; ofs -= 8) BEGIN
      PATCH_IF (found = 0) BEGIN
        READ_ASCII ofs script (8) NULL
        PATCH_IF (~%script%~ STRING_EQUAL ~~ OR NOT FILE_EXISTS_IN_GAME ~%script%.bcs~) BEGIN
          WRITE_ASCII ofs ~a7!jerl~ #8
          SET found = 1
        END
      END
    END
  BUT_ONLY IF_EXISTS

  COPY ~%MOD_FOLDER%/stores/a7!jerl.sto~ ~override~
    WRITE_LONG NAME2 name_strref  // Jerlia the Ore Merchant
END


// Drow Merchant Nym
ACTION_IF (GAME_IS_BG2EE OR GAME_IS_EET) BEGIN
  COPY ~%MOD_FOLDER%/creatures/a7!nym.cre~ ~override~
    SAY NAME1 @100013 // Nym
    SAY NAME2 @100014 // Dark Elf Merchant

  COMPILE ~%MOD_FOLDER%/dialogs/a7!nym.d~
  COMPILE ~%MOD_FOLDER%/scripts/a7!nym.baf~
  EXTEND_BOTTOM ~ar6100.bcs~ ~%MOD_FOLDER%/scripts/ar6100_bottom.baf~

  COPY ~%MOD_FOLDER%/stores/a7!nym1.sto~ ~override~
    SAY NAME2 @100011 // Nym's General Store

  COPY ~%MOD_FOLDER%/stores/a7!nym2.sto~ ~override~
    SAY NAME2 @100012 // Nym's Exotic Goods

  // Installing language-specific voice files
  ACTION_FOR_EACH file IN ~a7!nym01.wav~ ~a7!nym02.wav~ ~a7!nym03.wav~ ~a7!nym04.wav~ ~a7!nym05.wav~ BEGIN
    ACTION_IF (FILE_EXISTS ~%MOD_FOLDER%/language/%LANGUAGE%/%file%~) BEGIN
      COPY ~%MOD_FOLDER%/language/%LANGUAGE%/%file%~ ~override~
    END
  END
END


// Adding golem-specific actions to Belhifet in final battle
ACTION_IF (GAME_IS_IWDEE) BEGIN
  EXTEND_TOP ~eebelwa.bcs~ ~%MOD_FOLDER%/scripts/iwdee/eebelwa_top.baf~
END
